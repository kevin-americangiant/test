{"version":3,"file":"server.js","sources":["webpack:///webpack/bootstrap 794227f2872e5041e8c1","webpack:///external \"babel-runtime/regenerator\"","webpack:///external \"babel-runtime/helpers/asyncToGenerator\"","webpack:///backend/api.js","webpack:///backend/server.js","webpack:///external \"express\"","webpack:///external \"body-parser\"","webpack:///external \"socket.io\"","webpack:///external \"http\"","webpack:///backend/createWebhook.js","webpack:///external \"babel-runtime/helpers/toConsumableArray\"","webpack:///external \"axios\"","webpack:///backend/clearWebhooks.js","webpack:///backend/getWebhooks.js","webpack:///backend/removeWebhook.js","webpack:///backend/routes.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 794227f2872e5041e8c1","module.exports = require(\"babel-runtime/regenerator\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/regenerator\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"babel-runtime/helpers/asyncToGenerator\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/helpers/asyncToGenerator\"\n// module id = 1\n// module chunks = 0","// API helper functions\n/*\n\nEvery API has its own predilections, here we create straightforward helper functions to make working with external APIs throughout the rest of the app abstract and easy.\n\nWe use axios to make these API calls so that we can work with them as promises.\n\n*/\n\n// IMPORTS\n\nimport axios from 'axios';\n\n// FUNCTIONS\n\n// asana\n// given a method (string), url (string), Personal Access Token (string), and optionally a body ({}), asana returns a json parsed response from the Asana API\n\nexport const asana = async (method, url, token, data) => {\n  try {\n    // Use fetch to create a promise and call Asana\n    const response = await axios({\n      url,\n      baseURL: 'https://app.asana.com/api/1.0/',\n      method,\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Asana-Fast-Api': 'true'\n      },\n      data\n    })\n    \n    return response.data;\n  } catch (e) {\n    if (e.response.status === 401) {\n      console.error(\n        'Asana responded with 401 (not authorized), this usually means you have not provided a valid Personal Access Token in your .env file or your Personal Access Token does not have permissions for the resource ID you provided. Read more about Personal Access Tokens here: https://asana.com/guide/help/api/api#gl-access-tokens'\n      )\n    } else if (e.response.status === 400) {\n      console.error(\n      'Asana responded with 400 (resource not found), this usually means you have not provided a valid resource ID in your .env file. A Resource can be a task ID or a project ID.'\n      )\n    } else {\n    console.error(e.message)\n    }\n  }\n}\n\n// flatten\n// given an two dimensional array, return a one dimensional array\nexport const flatten = arr => [].concat(...arr);\n\n\n// WEBPACK FOOTER //\n// backend/api.js","import express from 'express';\nimport bodyParser from 'body-parser';\nimport socketIO from 'socket.io';\nimport http from 'http';\nimport { createWebhook } from './createWebhook';\nimport { clearWebhooks } from './clearWebhooks';\nimport { asana } from './api';\nimport { routes } from './routes';\n\n// EXPRESS SET UP\n\n// Start up express\nconst app = express();\n\n// Middleware for parsing application/x-www-form-urlencoded\napp.use(bodyParser.urlencoded({ extended: false }));\n\n// Middleware for parsing application/json\napp.use(bodyParser.json());\n\n// SET UP WEB SOCKETS\n\n// Create http server with app\nconst server = http.createServer(app);\n\n// pass server to sockiet.io for websockets\nconst io = socketIO(server);\n\n// add io to Express request objects\napp.use((req, res, next) => {\n  req.io = io;\n  next();\n});\n\n// START UP OUR SERVER\n\n// Serve up some static files\napp.use(express.static('public'));\n\n// Use these routes\napp.use('/', routes(express.Router()));\n\n// Listen on this here port\nserver.listen(process.env.PORT, () => {\n  console.log(`Your app is listening on port ${server.address().port}. ðŸš¢`);\n});\n\n// INTIALIZE WEBHOOkS\n\nconst intializeWebhooks = async () => {\n  try {\n    // 1. Remove all webhooks we might have previously created for this application\n    await clearWebhooks(\n      process.env.PERSONAL_ACCESS_TOKEN,\n      `https://${process.env.PROJECT_DOMAIN}.glitch.me/events`,\n      io\n    );\n\n    // 2. After clearWebhooks has resolved, POST a new webhook using the resource ID provided\n    createWebhook(\n      process.env.PERSONAL_ACCESS_TOKEN,\n      process.env.RESOURCE_ID,    `https://${process.env.PROJECT_DOMAIN}.glitch.me/events`,\n      io\n    );\n  } catch (e) {\n    console.error(e.message)\n  }\n};\n\nintializeWebhooks();\n\n\n\n// WEBPACK FOOTER //\n// backend/server.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"socket.io\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"socket.io\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 7\n// module chunks = 0","  // createWebhook -> utility function\n/*\n\nTakes a Personal Access Token, a resource ID, and POSTs a new webhook \n\n*/\n\n// IMPORTS\n\nimport { asana } from './api';\n\n\n// FUNCTION\n\nexport const createWebhook = async (token, resource, target) => {\n  try {\n  \n    // 1. structure the dat we'll post\n    const payload = {\n      data: {\n        resource,\n        target\n      }\n    };\n\n    // 2. POST using our Asana API helper function\n    return await asana(\n      'POST',\n      '/webhooks',\n      process.env.PERSONAL_ACCESS_TOKEN,\n      payload\n    );\n  } catch (e) {\n    console.error(e.message)\n  }\n};\n\n\n// WEBPACK FOOTER //\n// backend/createWebhook.js","module.exports = require(\"babel-runtime/helpers/toConsumableArray\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/helpers/toConsumableArray\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"axios\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"axios\"\n// module id = 10\n// module chunks = 0","// clearWebhooks -> utiltiy function\n/*\n\nGiven a Personal Access Token and a target string, composes getWebhooks and removeWebhooks to clear all previously create webhooks from this project.\n\n*/\n\n// IMPORTS\n\nimport { getWebhooks } from './getWebhooks';\nimport { removeWebhook } from './removeWebhook';\n\n// FUNCTION\n\nexport const clearWebhooks = async (token, target) => {  \n  try {\n    // 1. Fetch an array of previously created webhooks using getWebhooks\n    const oldWebhooks = await getWebhooks(token, target);\n\n    // 2. Make parallel calls to the Asana API to remove each Webhook in the array that getWebhooks returns\n    await Promise.all(\n      await oldWebhooks.map(async v => await removeWebhook(token, v))\n    );\n  } catch (e) {\n    console.error(e.message)\n  }\n};\n\n\n// WEBPACK FOOTER //\n// backend/clearWebhooks.js","// getWebhook.js\n/* \n\nUtility function that takes in an Asana Personal Access Token and returns an array of all active webhook IDs associated with a specific target.\n  \nThis lets us find all the webhooks we have created for a specific target and, in practice, allows us to clean up webhooks we've created with previous instances of our application.\n  \nGetting these IDs is slightly tricky. The Asana API only allows us to GET webhooks by workspace, so we have to:\n- Get all the user's workspaces (returned by the API as an array)\n- Get all the webhooks in each workspace (returned by the API as objects)\n- Filter the webhooks by active and by the target resource\n- Concatenate only the IDs into a flat array of numnbers\n  \nWe take a functional, RxJS-esque approach using async/await here. We aren't actually using observables or any external libraries, but if you're familiar with functional or reactive programming patterns or if you've worked with observables before, this will hopefully feel simple.\n  \nIf you aren't familiar with those patterns, this function might feel a little tough. Let's walk you through it step by step:\n  \n*/\n\n// IMPORTS\n\nimport { asana, flatten } from './api';\n\n// FUNCTION\n\nexport const getWebhooks = async (token, target) => {\n  \n  try {\n    \n  // 1. Create a workspaces variable and put the results of an API call to Asana that fetches an array of the user's workspaces in it\n  const workspaces = await (await asana(\n    'GET',\n    '/users/me?opt_fields=workspaces',\n    token\n  )).data.workspaces;\n\n  // 2. Return a flattened array a webhook IDs\n  // 2.1 flatten the array of results we'll get back from fetching the webhook objects on each workspace in our workspaces array\n  return await flatten(\n\n    // 2.2 Use promise.all to fetch the webhook objects for each workspace in parallel\n    await Promise.all(\n\n      // 2.3 Map through our array of workspaces and for each one fetch their webhook objects and return the resulting data\n      workspaces.map(\n        async v =>\n          await (await asana('GET', `webhooks?workspace=${v.id}`, token)).data\n      )\n    )\n  )\n\n    // 2.4 Filter our flattened array of webhook objects by their `target` (string) and `active` (boolean) keys\n    .filter(\n      v =>\n        v.target === target &&\n        v.active === true\n    )\n\n    // 2.5 Finally, return an array of just the value in each webhook object's `id` key\n    .map(v => v.id);\n  } catch(e) {\n    console.error(e.message)\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// backend/getWebhooks.js","// removeWebhooks -> utiltiy function\n/*\n\nGiven a Personal Access Token and a webhook ID, sends a DELETE to Asana to remove the webhook.\n\n*/\n\n// IMPORTS\n\nimport { asana } from './api';\n\n// FUNCTION\n\nexport const removeWebhook = async (token, webhookId) => {\n\n  try {\n  // Send DELETE to Asana\n  await asana(\n    'delete',\n    `/webhooks/${webhookId}`,\n    process.env.PERSONAL_ACCESS_TOKEN\n  );\n  } catch (e) {\n    console.error(e.message);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// backend/removeWebhook.js","export const routes = router => {\n  \n  // Serve up our index.html file on the main route\n  router.get('/', (request, response) => {\n    response.sendFile(`/app/public/index.html`);\n  });\n  \n  // Pass errors along to our frontend\n  router.get('/errors', (request, response) => {\n    response.sendFile(`/app/public/index.html`);\n  });\n\n  // '/events' route\n  /*\n  This is our primary route for webhooks. On this route, we'll have to handle when Asana's API POSTs the initial webhook handshake and when it further POSTs events from our resource \n  */\n\n  router.post('/events', (request, response) => {\n    // 1. Set our response header to use the same x-hook-secret key that Asana provides us in the handshake and set our status code to 200\n    response\n      .header('x-hook-secret', request.headers['x-hook-secret'])\n      .status(200);\n\n    // 2. Respond with a '200 OK' message before we do anything else so that Asana knows we recieved its POST\n    response.send('200 OK');\n\n    if (request.body.events) {\n      \n      // 3. For diagonstic purposes, log the events Asana sends us (you can see these by clicking the \"Logs\" button in the upper left)\n      console.log(request.body.events);\n      \n      // 4. Emit our events array on our websocket\n      /* \n      The only thing we do here is emit on our websocket so our client can consume these new events. In a real world application, this is where you might make calls to other APIs (if you're looking to connect Asana events to actions in another service) or make further Asana API calls (if you'd like to explore what triggered these events in more detail). \n      */\n\n      request.io.emit('newEvents', request.body.events);\n    }\n  });\n\n  // return our newly adorned router\n\n  return router;\n};\n\n\n// WEBPACK FOOTER //\n// backend/routes.js"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7DA;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACWA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AARA;AACA;AAJA;AAGA;AAHA;AACA;AADA;AAAA;AAAA;AACA;AAeA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA6BA;AACA;AAjDA;AACA;AACA;;;;;;;AAOA;AACA;AAwCA;AAAA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;AClDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAQA;AACA;AAVA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAeA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAmBA;;;;;;ACrEA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;ACSA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AACA;AAMA;AACA;AAZA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAkBA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAbA;AACA;;;;;AAKA;;;;;;ACPA;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;ACSA;AACA;AAAA;AACA;;;AACA;AACA;AAbA;AACA;AACA;;;;;AAKA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AASA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACOA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAKA;AALA;AAAA;AAAA;AACA;AAiBA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AApBA;AAAA;AACA;AADA;AA4BA;AAAA;AACA;AA7BA;AAkCA;AAAA;AACA;AAnCA;AAAA;AACA;AAyBA;AACA;AACA;AAKA;AACA;AACA;AAnCA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAmCA;AACA;AArCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAxBA;AACA;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AASA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAZA;AACA;;;;;AAKA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A","sourceRoot":""}